name: Build and test

on:
  push:
  pull_request:
  schedule:
  # 01:00 Pacific Time (in UTC), every day (late night PT)
  - cron:  '0 8 * * *'

jobs:
  build:
    name: ${{ matrix.grass-version }} (Python ${{ matrix.python-version }})

    runs-on: ubuntu-20.04

    strategy:
      matrix:
        # Test with relevant active branches or tags and supported Python
        # versions, but also limit the number of jobs by, e.g., testing only
        # every second version or testing older GRASS versions with older Python
        # only.
        include:
          - grass-version: main
            python-version: "3.8"
          - grass-version: releasebranch_8_0
            python-version: "3.7"
      fail-fast: false

    steps:

    - name: Checkout core
      uses: actions/checkout@v2
      with:
        repository: OSGeo/grass
        ref: ${{ matrix.grass-version }}
        path: grass

    - name: Checkout addons
      uses: actions/checkout@v2
      with:
        path: t.rast.import.netcdf

    - name: Get dependencies
      run: |
        sudo add-apt-repository -y ppa:ubuntugis/ppa
        sudo apt-get update -y
        sudo apt-get install -y wget git gawk findutils
        xargs -a <(awk '! /^ *(#|$)/' "t.rast.import.netcdf/.github/workflows/apt.txt") -r -- \
            sudo apt-get install -y --no-install-recommends --no-install-suggests

    - name: Set up Python ${{ matrix.python-version }} as default Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Get Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade numpy thredds_crawler cf_units

    - name: Create installation directory
      run: |
        mkdir $HOME/install

    - name: Set number of cores for compilation
      run: |
        echo "MAKEFLAGS=-j$(nproc)" >> $GITHUB_ENV

    - name: Set LD_LIBRARY_PATH for GRASS GIS compilation
      run: |
        echo "LD_LIBRARY_PATH=$HOME/install/lib" >> $GITHUB_ENV

    - name: Build GRASS GIS core
      run: |
        cd grass
        ../t.rast.import.netcdf/.github/workflows/build_grass.sh $HOME/install

    - name: Add the bin directory to PATH
      run: |
        echo "$HOME/install/bin" >> $GITHUB_PATH

    - name: Make simple grass command available (not needed in G8)
      run: |
        if [ ! -e $HOME/install/bin/grass ] ; then ln -s $HOME/install/bin/grass* $HOME/install/bin/grass ; fi

    - name: Get extra Python dependencies
      run: |
        export GDAL_VERSION=$(gdal-config --version)
        pip install -r t.rast.import.netcdf/.github/workflows/extra_requirements.txt

    - name: Install the module
      run: |
        grass --tmp-location XY --exec g.extension extension=t.rast.import.netcdf url=t.rast.import.netcdf/ --verbose
    - name: Cache data for testing
      id: cache-nc_spm_08_grass7
      uses: actions/cache@v1
      with:
        path: nc_spm_08_grass7
        key: ${{ runner.os }}-nc_spm_08_grass7
    - name: Create a temporary location
      run: |
        grass -c EPSG:4326 ~/grasstmploc -e
    - name: Get sample data for testing (NC SPM sample location)
      if: steps.cache-nc_spm_08_grass7.outputs.cache-hit != 'true'
      run: |
        grass ~/grasstmploc/PERMANENT --exec g.download.location url=https://grass.osgeo.org/sampledata/north_carolina/nc_spm_08_grass7.tar.gz --verbose
    - name: Run test (manually specified files)
      run: |
        cd t.rast.import.netcdf/testsuite/
        export CPL_ENABLE_USERFAULTFD=NO
        grass -c ~/nc_spm_08_grass7/test --exec ./test_t_rast_import_netcdf.py
        rm -rf ~/nc_spm_08_grass7/test
